# admin/broadcast_poll.py

from aiogram import Router, F, Bot
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.exceptions import TelegramAPIError

from db_manager.db import Database

db = Database()
broadcast_poll_router = Router()


@broadcast_poll_router.message(Command("broadcast_poll"))
async def start_broadcast_poll(message: Message):
    """–ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏ –æ–ø—Ä–æ—Å–∞"""
    if not db.is_admin(message.from_user.id):
        await message.answer("üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏.")
        return

    await message.answer(
        "üó≥ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞ –æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.\n\n"
        "–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –ø—Ä—è–º–æ –≤ Telegram ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ ¬´–û–ø—Ä–æ—Å¬ª ‚Üí –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, –æ—Ç–≤–µ—Ç—ã –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞."
    )


@broadcast_poll_router.message(F.poll)
async def receive_poll(message: Message, bot: Bot):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞ –∏ —Ä–∞—Å—Å—ã–ª–∫–∞"""
    if not db.is_admin(message.from_user.id):
        await message.answer("üö´ –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —Ä–∞—Å—Å—ã–ª–∞—Ç—å –æ–ø—Ä–æ—Å—ã.")
        return

    poll = message.poll
    question = poll.question
    options = [opt.text for opt in poll.options]
    is_anonymous = poll.is_anonymous
    allows_multiple_answers = poll.allows_multiple_answers

    users = db.get_all_users()  # –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —Å–ø–∏—Å–æ–∫ user_id
    sent = 0

    await message.answer("üì§ –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É –æ–ø—Ä–æ—Å–∞...")

    for user_id in users:
        try:
            await bot.send_poll(
                chat_id=user_id,
                question=question,
                options=options,
                is_anonymous=is_anonymous,
                allows_multiple_answers=allows_multiple_answers
            )
            sent += 1
        except TelegramAPIError:
            continue
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    await message.answer(f"‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n–û–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω {sent} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")