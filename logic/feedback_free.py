# logic/feedback_free.py
from aiogram import Router, F, Bot
from aiogram.types import Message
from db_manager.db import Database
from config import config
import asyncio

feedback_free_router = Router()
db = Database()


@feedback_free_router.message(F.text & ~F.text.startswith('/'))
async def collect_free_feedback(message: Message, bot: Bot):
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –±–µ–∑ FSM –∏ –∫–Ω–æ–ø–æ–∫.
    –õ—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ –Ω–∞—á–∏–Ω–∞—é—â–µ–µ—Å—è —Å '/', —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ—Ç–∑—ã–≤–æ–º.
    """

    feedback_text = message.text.strip()

    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if not feedback_text:
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –≤ –±–∞–∑—É
    db.add_feedback(user_id=message.from_user.id, description=feedback_text, status=0)

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    for admin_id, _ in db.get_all_admins():
        try:
            await bot.send_message(
                admin_id,
               f"üÜï –ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤:\n\n{feedback_text}"
                #f"üÜï –ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç @{message.from_user.username or message.from_user.full_name}:\n\n{feedback_text}"
            )
        except Exception:
            pass

    # –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ans_1 = await message.answer(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üí¨ –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –∏ –ø—Ä–∏–º–µ–º –≤–æ –≤–Ω–∏–º–∞–Ω–∏–µ."
    )
    ans_2 = await message.answer(
        "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –µ—â–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞!üì®"
    )

    # –ß–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –æ—á–∏—â–∞–µ–º —á–∞—Ç
    await asyncio.sleep(30)
    for msg in (ans_1, ans_2, message):
        try:
            await msg.delete()
        except Exception:
            pass